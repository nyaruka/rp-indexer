name: CI
on: [push, pull_request]
env:
  go-version: "1.23.x"
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_DB: indexer_test
          POSTGRES_USER: indexer_test
          POSTGRES_PASSWORD: temba
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      opensearch:
        image: opensearchproject/opensearch:2.13.0
        env:
          discovery.type: single-node
          plugins.security.disabled: true
          OPENSEARCH_JAVA_OPTS: -Xms512m -Xmx512m
          DISABLE_INSTALL_DEMO_CONFIG: true
          OPENSEARCH_INITIAL_ADMIN_PASSWORD: temba

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.go-version }}

      - name: Run tests
        run: go test -p=1 -coverprofile=coverage.text -covermode=atomic ./...

      - name: Upload coverage
        if: success()
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  release:
    name: Release
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.go-version }}

      - name: Publish release
        uses: goreleaser/goreleaser-action@v6
        with:
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
